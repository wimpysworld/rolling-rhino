#!/usr/bin/env bash

function usage () {
  echo
  echo "Usage"
  echo "  $0"
  echo
}

function update_ppas () {
      cd /etc/apt/sources.list.d
      for f in *; do
        if grep -q ppa.launchpad.net ./$f; then
            sed -i -e 's/'${OS_CODENAME}'/devel/g' ./$f
        fi
      done
}

function fancy_message() {
    # $1 = type , $2 = message
    # Message types
    # 0 - info
    # 1 - warning
    # 2 - error
    if [ -z "${1}" ] || [ -z "${2}" ]; then
      return
    fi

    local RED="\e[31m"
    local GREEN="\e[32m"
    local YELLOW="\e[33m"
    local RESET="\e[0m"
    local MESSAGE_TYPE=""
    local MESSAGE=""
    MESSAGE_TYPE="${1}"
    MESSAGE="${2}"
    
    case ${MESSAGE_TYPE} in
      0) echo -e "  [${GREEN}+${RESET}] INFO: ${MESSAGE}";;
      1) echo -e "  [${YELLOW}*${RESET}] WARNING: ${MESSAGE}";;
      2) echo -e "  [${RED}!${RESET}] ERROR: ${MESSAGE}";;
      *) echo -e "  [?] UNKNOWN: ${MESSAGE}";;
    esac
}

echo "Rolling Rhino 🦏"

# Check if the user running the script is root
if [ "$(id -u)" -ne 0 ]; then
  fancy_message 2 "You need to be root."
  exit 1
fi

# Take command line arguments
while [ $# -gt 0 ]; do
  case "${1}" in
    -h|--h|-help|--help)
      usage
      exit 0;;
    *)
      fancy_message 2 "\"${1}\" is not a supported parameter."
      usage
      exit 1;;
  esac
done

if which lsb_release 1>/dev/null; then
  fancy_message 0 "lsb_release detected."
else
  fancy_message 2 "lsb_release not detected. Quitting."
  exit 1
fi

OS_CODENAME=$(lsb_release --codename --short)
OS_ID=$(lsb_release --id --short)
if [ "${OS_ID}" == "Ubuntu" ]; then
  fancy_message 0 "Ubuntu detected."
else
  fancy_message 2 "${OS_ID} detected, which is not supported."
  exit 1
fi

if grep -q devel /etc/apt/sources.list; then
  fancy_message 2 "Already tracking the devel series. Updating launchpad PPAs."
  update_ppas
  apt -y autoclean
  apt -y clean
  apt -y update
  apt -y dist-upgrade
  exit 0
fi

OS_DESCRIPTION=$(lsb_release --description --short)
if [[ "${OS_DESCRIPTION}" == *"development branch"* ]]; then
  fancy_message 0 "${OS_DESCRIPTION} detected."
elif  [[ "${OS_DESCRIPTION}" == *"LTS"* ]]; then
  fancy_message 2 "${OS_DESCRIPTION} detected. Switching a LTS release to the devel series directly is not supported."
  exit 1
else
  fancy_message 2 "${OS_DESCRIPTION} detected. Switching an interim release to the devel series directly is not supported."
  exit 1
fi

DESKTOP_FOUND=0
for META in kubuntu-desktop lubuntu-desktop ubuntu-desktop ubuntu-budgie-desktop ubuntukylin-desktop ubuntu-mate-desktop ubuntustudio-desktop xubuntu-desktop; do
  INSTALLED=$(apt list --installed "${META}" 2>/dev/null | grep installed)
  if [ -n "${INSTALLED}" ]; then
    fancy_message 0 "Detected ${META}."
    DESKTOP_FOUND=1
    break
  fi
done

if [ ${DESKTOP_FOUND} -eq 0 ]; then
  fancy_message 2 "No installed desktop packages were detected. Quitting."
  exit 1
fi

UPDATE_PPAS=0
if [ -z "$(ls -A /etc/apt/sources.list.d/*.list 2>/dev/null)" ]; then
  fancy_message 0 "No PPAs detected, this is good."
else
  fancy_message 1 "PPAs detected, the script will update launchpad PPAs to track the devel series."
  UPDATE_PPAS=1
fi

fancy_message 0 "All checks passed."
read -p "Are you sure you want to start tracking the devel series? [Y/N]" -n 1 -r
if [[ ${REPLY} =~ ^[Yy]$ ]]; then
    cp  /etc/apt/sources.list /etc/apt/sources.list.${OS_CODENAME}
    cat << EOF > /etc/apt/sources.list
# See http://help.ubuntu.com/community/UpgradeNotes for how to upgrade to
# newer versions of the distribution.
deb http://archive.ubuntu.com/ubuntu devel main restricted
# deb-src http://archive.ubuntu.com/ubuntu devel main restricted

## Major bug fix updates produced after the final release of the
## distribution.
deb http://archive.ubuntu.com/ubuntu devel-updates main restricted
# deb-src http://archive.ubuntu.com/ubuntu devel-updates main restricted

## N.B. software from this repository is ENTIRELY UNSUPPORTED by the Ubuntu
## team. Also, please note that software in universe WILL NOT receive any
## review or updates from the Ubuntu security team.
deb http://archive.ubuntu.com/ubuntu devel universe
# deb-src http://archive.ubuntu.com/ubuntu devel universe
deb http://archive.ubuntu.com/ubuntu devel-updates universe
# deb-src http://archive.ubuntu.com/ubuntu devel-updates universe

## N.B. software from this repository is ENTIRELY UNSUPPORTED by the Ubuntu
## team, and may not be under a free licence. Please satisfy yourself as to
## your rights to use the software. Also, please note that software in
## multiverse WILL NOT receive any review or updates from the Ubuntu
## security team.
deb http://archive.ubuntu.com/ubuntu devel multiverse
# deb-src http://archive.ubuntu.com/ubuntu devel multiverse
deb http://archive.ubuntu.com/ubuntu devel-updates multiverse
# deb-src http://archive.ubuntu.com/ubuntu devel-updates multiverse

## N.B. software from this repository may not have been tested as
## extensively as that contained in the main release, although it includes
## newer versions of some applications which may provide useful features.
## Also, please note that software in backports WILL NOT receive any review
## or updates from the Ubuntu security team.
deb http://archive.ubuntu.com/ubuntu devel-backports main restricted universe multiverse
# deb-src http://archive.ubuntu.com/ubuntu devel-backports main restricted universe multiverse

## Uncomment the following two lines to add software from Canonical's
## 'partner' repository.
## This software is not part of Ubuntu, but is offered by Canonical and the
## respective vendors as a service to Ubuntu users.
# deb http://archive.canonical.com/ubuntu devel partner
# deb-src http://archive.canonical.com/ubuntu devel partner

deb http://security.ubuntu.com/ubuntu devel-security main restricted
# deb-src http://security.ubuntu.com/ubuntu devel-security main restricted
deb http://security.ubuntu.com/ubuntu devel-security universe
# deb-src http://security.ubuntu.com/ubuntu devel-security universe
deb http://security.ubuntu.com/ubuntu devel-security multiverse
# deb-src http://security.ubuntu.com/ubuntu devel-security multiverse
EOF

    fancy_message 0 "Switching to devel series."
    
    if [ ${UPDATE_PPAS} -eq 1 ]; then
	update_ppas
    fi
    
    apt -y autoclean
    apt -y clean
    apt -y update
    apt -y dist-upgrade
    fancy_message 0 "Your Rolling Rhino is ready."
    cat "$(dirname "$0")/logo.txt"
fi  
